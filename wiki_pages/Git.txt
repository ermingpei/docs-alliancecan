<languages />
[[Category:Software]]
<translate>
== Description == <!--T:1-->
[https://en.wikipedia.org/wiki/Git Git] is a distributed, fast and secure source code management tool. The official Git website is [http://gitscm.org gitscm.org]. The Git software was initially created by  [http://en.wikipedia.org/wiki/Linus_Torvalds Linus Torvalds] for the Linux project and the current maintainer is [http://en.wikipedia.org/wiki/Junio_Hamano Junio Hamano]. The development of Git itself is performed on the  [https://git.wiki.kernel.org/index.php/Main_Page kernel.org] platform.

== Operating principle == <!--T:2-->
Contrary to older source code management tools, Git works in a distributed way. This means that developers do not depend on a central repository to commit their changes. Each Git repository contains the full history of the project. Each Git object (changeset, file, directory) is the leaf of a tree with multiple branches. Developing a project with Git is based on a model in which one branch corresponds to one feature. Many revisions of the feature may be archived before the branch gets merged with the main trunk. For a detailed explanation of branch development, we recommend reading [http://nvie.com/posts/a-successful-git-branching-model/ this page].

<!--T:3-->
One especially interesting technique is ''cherry-picking'', which is essentially taking part of a branch and merging it with another one. 

== Basic usage == <!--T:4-->
Generally, a project developer must be able to:

<!--T:5-->
# clone or create the repository;
# make changes;
# commit changes;
# push changes toward the original repository.

<!--T:6-->
Since Git is distributed, there may not be an authoritative repository.

== Summary of commands == <!--T:7-->
{| class="wikitable" 
|+ Basic commands
! Command
! Description
|-
| <tt>git config</tt>
| Configures git
|-
| <tt>git init</tt>
| Creates a new repository
|-
| <tt>git clone</tt>
| Clones an existing repository
|-
| <tt>git add</tt>
| Adds a file or directory to a repository
|-
| <tt>git rm</tt>
| Deletes a file or directory from the repository
|-
| <tt>git commit</tt>
| Commits changes to the repository
|-
| <tt>git push</tt>
| Pushes commited changes to a different repository
|-
| <tt>git pull</tt>
| Pulls changes from a different repository and merges them with your own repository
|-
| <tt>git fetch</tt>
| Fetches changes from a different repository without merging them to yours
|-
| <tt>git merge</tt>
| Merges changes to the repository
|}


<!--T:8-->
{| class="wikitable" 
|+ Commands to explore changes
! Command
! Description
|-
| <tt>git blame</tt>
| Gives the origin of each change
|-
| <tt>git log</tt>
| Displays changes history
|-
| <tt>git diff</tt>
| Compares two versions
|-
| <tt>git status</tt>
| Displays status of the current files
|-
| <tt>git show</tt>
| Displays various git objects
|-
| <tt>git cat-file</tt>
| Displays the content, type or size of objects
|}


<!--T:9-->
{| class="wikitable" 
|+ Commands for branches, tags and remote repositories
! Command
! Description
|-
| <tt>git branch</tt>
| Manages development branches
|-
| <tt>git tag</tt>
| Manages version tags
|-
| <tt>git remote</tt>
| Manages remote repositories
|-
| <tt>git checkout</tt>
| Checks out a branch or a path
|-
| <tt>git reset</tt>
| Changes the head of a branch
|}


<!--T:10-->
{| class="wikitable" 
|+ Commands for patches
! Command
! Description
|-
| <tt>git format-patch</tt>
| Creates a patch
|-
| <tt>git am</tt>
| Applies a patch
|-
| <tt>git send-email</tt>
| Sends a patch by email
|}


<!--T:11-->
{| class="wikitable" 
|+ Other commands
! Command
! Description
|-
| <tt>git bisect</tt>
| Used to diagnose problems
|-
| <tt>git gc</tt>
| Collects garbage objects
|-
| <tt>git rebase</tt>
| Rebases history of the repository
|-
| <tt>git grep</tt>
| Searches for content
|}

== Creating or cloning a repository == <!--T:12-->
The first step is usually to create your own repository, or to clone an existing one.

<!--T:13-->
To create a repository:
{{Command| git init my-project}}

<!--T:14-->
To clone a repository:
{{Command | git clone git://github.com/git/git.git}}

== Commiting a change == <!--T:15-->
When the repository is ready, you change directory and edit the file.
{{Commands
| cd my-project
| nano file.txt
}}

<!--T:16-->
When work is done, you add the file
{{Command| git add file.txt}}
and commit the change
{{Command| git commit }}

<!--T:17-->
It is then possible to push changes to the origin repository with
{{Command| git push origin main}}

<!--T:18-->
In the above command, ''origin'' is the remote repository and ''main'' is the current branch that will be pushed.

You might have to use <tt>git push origin master</tt> for older git repositories. 
== Hosting Git repositories == <!--T:19-->
[http://github.com GitHub] and [http://bitbucket.org Bitbucket] are two of the main Git repository hosting services. They are both available for commercial projects as well as free projects.
</translate>