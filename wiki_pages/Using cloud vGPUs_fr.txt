<languages />

Cette page décrit comment
* allouer des ressources de GPU virtuel (vGPU) à une machine virtuelle (VM),
* installer les pilotes nécessaires et
* vérifier si le vGPU peut être utilisé.
L'accès aux dépôts de données ainsi qu'aux vGPU n'est actuellement disponible que sur [[Arbutus/fr|le nuage Arbutus]]. Veuillez noter que la documentation ci-dessous ne couvre que l'installation du pilote vGPU. La [https://developer.nvidia.com/cuda-toolkit-archive boîte à outils CUDA] n'est pas préinstallée mais vous pouvez l'installer directement à partir de NVIDIA ou la charger de [[Accessing_CVMFS/fr|la pile logicielle dans CVMFS]].
Si vous choisissez d'installer la boîte à outils directement de NVIDIA, assurez-vous que le pilote vGPU n'est pas écrasé par celui de CUDA.

== Gabarits pris en charge ==

Pour utiliser un vGPU dans une machine virtuelle, l'instance doit être déployée sur un des gabarits mentionnés ci-dessous. Le vGPU sera disponible pour le système d'exploitation via le bus PCI.

* g1-8gb-c4-22gb
* g1-16gb-c8-40gb

== Préparer une machine virtuelle sous Almalinux9 == 

Une fois que la machine virtuelle est disponible, assurez-vous de mettre à jour le système d'exploitation avec la dernière version disponible, y compris le noyau (<i>kernel</i>).
Redémarrez ensuite la machine virtuelle pour exécuter le dernier noyau.

Pour avoir accès à [https://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support DKMS], le [https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm dépôt EPEL] est requis.

AlmaLinux 9 possède par défaut le pilote <code>nouveau</code> défectueux qui fait planter le noyau dès que le pilote <code>nvidia</code> est monté.
Nous avons besoin de quelques étapes supplémentaires pour empêcher le chargement du pilote nouveau au démarrage du système.

<pre>
[root@almalinux9]# echo -e "blacklist nouveau\noptions nouveau modeset=0" >/etc/modprobe.d/blacklist-nouveau.conf
[root@almalinux9]# dracut -fv --omit-drivers nouveau
[root@almalinux9]# dnf -y update && dnf -y install epel-release && reboot
</pre>

Après le redémarrage de la machine virtuelle, le dépôt <code>arbutus-cloud-vgpu</code> doit être installé. 

<pre>
[root@almalinux9]# dnf install http://repo.arbutus.cloud.computecanada.ca/pulp/repos/alma9/Packages/a/arbutus-cloud-vgpu-repo-1.0-1.el9.noarch.rpm</pre>

L’étape suivante consiste à installer les paquets vGPU pour installer le pilote requis.

<pre>
[root@almalinux9]# dnf -y install nvidia-vgpu-gridd.x86_64 nvidia-vgpu-tools.x86_64 nvidia-vgpu-kmod.x86_64
</pre>

Si votre installation réussit, vous pouvez utiliser <b>nvidia-smi</b> pour vérifier le bon fonctionnement.

<pre>
[root@almalinux9]# nvidia-smi 
Tue Apr 23 16:37:31 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

== Préparer une machine virtuelle sous Almalinux9 == 

Une fois que la machine virtuelle est disponible, assurez-vous de mettre à jour le système d'exploitation avec la dernière version disponible, y compris le noyau (<i>kernel</i>). Redémarrez ensuite la machine virtuelle pour exécuter le dernier noyau. 
Pour avoir accès à [https://en.wikipedia.org/wiki/Dynamic_Kernel_Module_Support DKMS], le [https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm dépôt EPEL] est requis.

<pre>
[root@vgpu almalinux]# dnf -y update && dnf -y install epel-release && reboot
</pre>

Après le redémarrage de la machine virtuelle, le répertoire <code>arbutus-cloud-vgpu</code> doit être installé.

<pre>
[root@almalinux8]# dnf install http://repo.arbutus.cloud.computecanada.ca/pulp/repos/alma8/Packages/a/arbutus-cloud-vgpu-repo-1.0-1.el8.noarch.rpm
</pre>

L’étape suivante consiste à installer les paquets vGPU pour installer le pilote requis.
<pre>
[root@vgpu almalinux]# dnf -y install nvidia-vgpu-gridd.x86_64 nvidia-vgpu-tools.x86_64 nvidia-vgpu-kmod.x86_64
</pre>

Si votre installation réussit, vous pouvez utiliser <b>nvidia-smi</b> pour vérifier le bon fonctionnement.

<pre>
[root@almalinux8]# nvidia-smi 
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

== Préparer une machine virtuelle sous Debian11 ==
Assurez-vous que les paquets les plus récents sont installés et que le système a été démarré avec le noyau stable le plus récent puisque <b>DKMS</b> exigera le dernier disponible dans les dépôts de données Debian.

<pre>
root@debian11:~# apt-get update && apt-get -y dist-upgrade && reboot
</pre>

Une fois que la machine virtuelle est redémarrée, le système devrait avoir le plus récent  noyau disponible et le dépôt peut être installé en installant le paquet <code>arbutus-cloud-repo</code>. Ce paquet contient la clé gpg qui signe tous les paquets.

<pre>
root@debian11:~# wget http://repo.arbutus.cloud.computecanada.ca/pulp/deb/deb11/pool/main/arbutus-cloud-repo_0.1_all.deb
root@debian11:~# apt-get install -y ./arbutus-cloud-repo_0.1_all.deb
</pre>

Faites la mise à jour de la cache apt locale et installez les paquets vGPU.

<pre>
root@debian11:~# apt-get update && apt-get -y install nvidia-vgpu-kmod nvidia-vgpu-tools nvidia-vgpu-gridd
</pre>

<pre>
root@debian11:~# nvidia-smi
Tue Apr 23 18:55:18 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

== Préparer une machine virtuelle sous Debian12 ==
Assurez-vous que les paquets les plus récents sont installés et que le système a été démarré avec le noyau stable le plus récent puisque <b>DKMS</b> exigera le dernier disponible dans les dépôts de données Debian.

<pre>
root@debian12:~# apt-get update && apt-get -y dist-upgrade && reboot
</pre> 

Après un redémarrage réussi, le système devrait fonctionner avec le dernier noyau disponible. Le dépôt de données peut maintenant être installé en installant le paquet <code>arbutus-cloud-repo</code> qui contient aussi la clé gpg pour tous les paquets.

<pre>
root@debian12:~# wget http://repo.arbutus.cloud.computecanada.ca/pulp/deb/deb12/pool/main/arbutus-cloud-repo_0.1+deb12_all.deb
root@debian12:~# apt-get install -y ./arbutus-cloud-repo_0.1+deb12_all.deb
</pre>

Faites la mise à jour de la cache apt locale et installez les paquets vGPU.

<pre>
root@debian12:~# apt-get update && apt-get -y install nvidia-vgpu-kmod nvidia-vgpu-tools nvidia-vgpu-gridd
</pre>

<pre>
root@debian12:~# nvidia-smi
Tue Apr 23 18:55:18 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

== Préparer une machine virtuelle sous Ubuntu22 ==
Assurez-vous que le système d'exploitation est à jour, que toutes les rustines (<i>patches</i>) les plus récentes sont installées et que le dernier noyau (<i>kernel</i>) stable est en cours d'exécution.

<pre>
root@ubuntu22:~# apt-get update && apt-get -y dist-upgrade && reboot
</pre>

Après un redémarrage réussi, le système devrait fonctionner avec le dernier noyau disponible. Le dépôt de données peut maintenant être installé en installant le paquet <code>arbutus-cloud-repo</code> qui contient aussi la clé gpg pour tous les paquets.

<pre>
root@ubuntu22:~# wget http://repo.arbutus.cloud.computecanada.ca/pulp/deb/ubnt22/pool/main/arbutus-cloud-repo_0.1_all.deb
root@ubuntu22:~# apt-get install ./arbutus-cloud-repo_0.1_all.deb
</pre>

Faites la mise à jour de la cache apt locale et installez les paquets vGPU.
<pre>
root@ubuntu22:~# apt-get update && apt-get -y install nvidia-vgpu-kmod nvidia-vgpu-tools nvidia-vgpu-gridd
</pre>

Si l'installation est réussie, le vGPU sera accessible et la licence sera validée.

<pre>
root@ubuntu22:~# nvidia-smi 
Wed Apr 24 14:37:52 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

== Préparer une machine virtuelle sous Ubuntu20 ==
Assurez-vous que le système d'exploitation est à jour, que toutes les rustines (<i>patches</i>) les plus récentes sont installées et que le dernier noyau (<i>kernel</i>) stable est en cours d'exécution.

<pre>
root@ubuntu20:~# apt-get update && apt-get -y dist-upgrade && reboot
</pre>

Après un redémarrage réussi, le système devrait fonctionner avec le dernier noyau disponible. Le dépôt de données peut maintenant être installé en installant le paquet <code>arbutus-cloud-repo</code> qui contient aussi la clé gpg pour tous les paquets.

<pre>
root@ubuntu20:~# wget http://repo.arbutus.cloud.computecanada.ca/pulp/deb/ubnt20/pool/main/arbutus-cloud-repo_0.1ubuntu20_all.deb
root@ubuntu20:~# apt-get install ./arbutus-cloud-repo_0.1ubuntu20_all.deb
</pre>

Faites la mise à jour de la cache apt locale et installez les paquets vGPU.
<pre>
root@ubuntu20:~# apt-get update && apt-get -y install nvidia-vgpu-kmod nvidia-vgpu-tools nvidia-vgpu-gridd
</pre>

Si l'installation est réussie, le vGPU sera accessible et la licence sera validée.

<pre>
root@ubuntu20:~# nvidia-smi 
Wed Apr 24 14:37:52 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.54.15              Driver Version: 550.54.15      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  GRID V100D-8C                  On  |   00000000:00:06.0 Off |                    0 |
| N/A   N/A    P0             N/A /  N/A  |       0MiB /   8192MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
</pre>

[[Category:Cloud]]