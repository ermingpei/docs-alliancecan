<languages />
[[Category:Software]]

L'Alliance n'a pas la permission d'installer Materials Studio de façon centrale sur toutes les grappes. Si vous disposez d'une licence, suivez ces directives pour installer l'application dans votre compte. Notez que ces directives sont valides pour les environnements logiciels moins récents; si vous utilisez présentement l'environnement 2020 par défaut, vous devrez utiliser une commande comme <code>module load StdEnv/2016.4</code> avant de commencer (voir [[Standard_software_environments/fr|Environnements logiciels standards]]).


= Installation de Materials Studio 2020 = {{Panel|title=Note|panelstyle=SideCallout|content=Ces directives ont été testées avec Materials Studio 2020. }}
Si vous avez accès à Materials Studio 2020, vous avez besoin 
*du fichier archive <code>BIOVIA_2020.MaterialsStudio2020.tar</code> qui contient l'installeur;
*de l'adresse IP (ou le nom du DNS) et le port du serveur de licence préconfiguré auquel vous voulez vous connecter.

Téléversez maintenant le fichier <code>BIOVIA_2020.MaterialsStudio2020.tar</code> dans votre répertoire /home sur la grappe que vous voulez utiliser. Lancez ensuite les commandes 
{{Command|export MS_LICENSE_SERVER{{=}}<port>@<server>}}
et
{{Command|eb MaterialsStudio-2020.eb --sourcepath{{=}}$HOME}}

Une fois que la commande est terminée, déconnectez-vous de la grappe et connectez-vous de nouveau. Vous devriez alors pouvoir charger le module avec 
{{Command|module load materialsstudio/2020}}

Pour avoir accès au serveur de licence à partir d'un nœud de connexion,  [[Technical support/fr|contactez le soutien technique]] pour que nous configurions nos pare-feu de façon à permettre au logiciel d'avoir accès à votre serveur de licence.


= Installation de Materials Studio 2018 = {{Panel|title=Note|panelstyle=SideCallout|content=Ces directives ont été testées avec Materials Studio 2018. }}
Si vous avez accès à Materials Studio 2018, vous aurez besoin
* du fichier d'archive (<code>MaterialsStudio2018.tgz</code>) qui contient l'installeur,
* de l'adresse IP (ou du nom DNS) et du port d'un serveur de licence déjà configuré auquel vous voulez vous connecter.

Téléchargez ensuite le fichier <code>MaterialsStudio2018.tgz</code> dans votre répertoire  /home de la grappe et lancez les commandes
{{Command|export MS_LICENSE_SERVER{{=}}<port>@<server>}}
et
{{Command|eb /cvmfs/soft.computecanada.ca/easybuild/easyconfigs/m/MaterialsStudio/MaterialsStudio-2018.eb --disable-enforce-checksums --sourcepath{{=}}$HOME}}

Lorsque l'opération est terminée, déconnectez-vous de la grappe et connectez-vous de nouveau. Vous devriez alors pouvoir charger le module avec
{{Command|module load materialsstudio/2018}}

Pour accéder au serveur de licence à partir d'un nœud de calcul, contactez le [[Technical support/fr|soutien technique]] pour que nos pare-feu soient configurés en conséquence.

== Installation pour un groupe ==
Si vous êtes chercheur principal et disposez d'une licence, vous n'avez qu'à installer l'application une fois pour tous les utilisateurs de votre groupe. Comme les travaux d'une équipe sont habituellement enregistrés dans l'espace <code>/project</code>, déterminez lequel des répertoires de cet espace vous voulez utiliser. Par exemple, s'il s'agit de <code>~/projects/A_DIRECTORY</code>, vous devrez connaître ces deux valeurs ː

1. Déterminez le chemin pour A_DIRECTORY avec
 {{Commands|PI_PROJECT_DIR{{=}}$(readlink -f ~/projects/A_DIRECTORY)|echo $PI_PROJECT_DIR}}
2. Déterminez le groupe pour A_DIRECTORY avec
 {{Commands|PI_GROUP{{=}}$(stat -c%G $PI_PROJECT_DIR)|echo $PI_GROUP}}

Avec ces deux valeurs, installez Materials Studio comme suit ː

# Remplacez le groupe par défaut par le groupe de l'équipe <code>def-</code>.
{{Command|newgrp $PI_GROUP}}
# Configurez les permissions pour donner accès au groupe. {{Command|chmod g+rsx $PI_PROJECT_DIR}}
# Créez un répertoire dans /project pour l'installation. {{Command|mkdir $PI_PROJECT_DIR/MatStudio2018}}
# Installez l'application. {{Command|MS_LICENSE_SERVER{{=}}<port>@<server> eb MaterialsStudio-2018-dummy-dummy.eb --installpath{{=}}$PI_PROJECT_DIR/MatStudio2018 --sourcepath{{=}}$HOME}}

Avant de lancer l'application ː

# Lancez la commande {{Command|module use $PI_PROJECT_DIR/MatStudio2018/modules/2017/Core/}}
#* Les membres de l'équipe peuvent ajouter ceci à leur fichier <code>~/.bashrc</code>.
# Chargez le module materialsstudio. {{Command|module load materialsstudio}}


<b>NOTE :</b> Assurez-vous de toujours remplacer les variables PI_GROUP et PI_PROJECT_DIR par les valeurs appropriées.

= Exemples de scripts pour l'ordonnanceur Slurm =
Les exemples suivants sont valides pourvu que vous ayez suivi les directives d'installation ci-dessus. 
{{File|contents=

#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --cpus-per-task=32
#SBATCH --time=12:00:00

module load materialsstudio/2018

# Create a list of nodes to be used for the job
DSD_MachineList="machines.LINUX"
slurm_hl2hl.py --format HP-MPI > $DSD_MachineList
export DSD_MachineList

# Job to run
RunDMol3.sh -np $SLURM_CPUS_PER_TASK Brucite001f
}}
Le script suivant utilise la commande Materials Studio RunCASTEP.sh.
{{File|contents=

#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=2
#SBATCH --mem-per-cpu=1M
#SBATCH --time=0-12:00

module load materialsstudio/2018

DSD_MachineList="mpd.hosts"
slurm_hl2hl.py --format MPIHOSTLIST >$DSD_MachineList
export DSD_MachineList

RunCASTEP.sh -np $SLURM_CPUS_PER_TASK castepjob

if [ -f castepjob_NMR.param ]; then
  cp castepjob.check castepjob_NMR.check
  RunCASTEP.sh -np $SLURM_CPUS_PER_TASK castepjob_NMR
fi
}}

= Installation de versions antérieures =

Pour utiliser une version de Materials Studio antérieure à 2018, vous devez l'installer dans un conteneur [[Apptainer/fr|Apptainer]].
# Créez un conteneur Apptainer dans lequel est installée une distribution compatible de Linux.
# Installez Materials Studio dans ce conteneur.
# Téléversez le conteneur Apptainer vers votre compte.
#* NOTE : Pour accéder au serveur de licence à partir d'un nœud de calcul, contactez le [[Technical support/fr|soutien technique]] pour que nos pare-feu soient configurés en conséquence.

Comme il se peut que la version de MPI dans le conteneur ne puisse pas être utilisée sur plusieurs nœuds, il est possible que vos tâches soient limitées à des nœuds entiers (nœud unique).