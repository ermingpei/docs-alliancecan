<languages/>
[[Category:Software]]

= Introduction =

"<b>CFOUR</b> (Coupled-Cluster techniques for Computational Chemistry) is a program package for performing high-level quantum chemical calculations on atoms and molecules. The major strength of the program suite is its rather sophisticated arsenal of high-level <i>ab-initio</i> methods for the calculation of atomic and molecular properties. Virtually all approaches based on MÃ¸ller-Plesset (MP) perturbation theory and the coupled-cluster approximation (CC) are available; most of these have complementary analytic derivative approaches within the package as well."

"<b>CFOUR</b> is not a commercial code. It is rather a program that is undergoing development; new techniques and improvements are constantly being made." See [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.HomePage the CFOUR web site] for more information.

= License limitations =

The Alliance has signed a [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Download license] agreement with [https://www.tc.uni-mainz.de/prof-dr-juergen-gauss/ Prof. Dr. J. Gauss] who acts for the developers of the CFOUR Software. 

In order to use the current installed version on the Alliance systems, each user must agree to certain conditions. Please [[Technical_support | contact support]] with a copy of the following statement:

# I will use CFOUR only for academic research.
# I will not copy the CFOUR software, nor make it available to anyone else.
# I will properly acknowledge original papers related to CFOUR and to the Alliance in my publications (see the license form for more details).
# I understand that the agreement for using CFOUR can be terminated by one of the parties: CFOUR developers or the Alliance.
# I will notify the Alliance of any change in the above acknowledgement.

When your statement is received, we will allow you to access the program.

= Module =

You can access the MPI version of CFOUR by loading a [[Utiliser des modules/en|module]].  

<source lang="bash">
module load intel/2023.2.1  openmpi/4.1.5 cfour-mpi/2.1
</source>

For the serial version, use:

<source lang="bash">
module load intel/2023.2.1 cfour/2.1
</source>

There is a mailing list as a forum for user experiences with the CFOUR program system. For how to subscribe and other information, see [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.MailingList this page].

== Examples and job scripts ==

To run CFOUR, you need to have at least the input file [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.InputFileZMAT ZMAT] with all information concerning geometry, requested quantum-chemical method, basis set, etc. The second file is [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Basis-setFileGENBAS GENBAS] that contains the required information for the basis sets available to the user. If GENBAS is not present in the directory from where you start your job, CFOUR will create a symlink and use the existing file provided by the module. The file is located at: <code>$EBROOTCFOUR/basis/GENBAS</code>.

<tabs>
<tab name="INPUT">
{{File
  |name=ZMAT
  |lang="txt"
  |contents=
Acetylene, CCSD/DZP excited-state geometry optimization
C                                                                              
C 1 RCC*
H 1 RCH* 2 A*
H 2 RCH* 1 A* 3 D180
                                                                               
RCC=1.36
RCH=1.08
A=124.
D180=180.
                                                                               
*ACES2(CALC=CCSD,BASIS=DZP,EXCITE=EOMEE                                     
ESTATE_CONV=10,CONV=10,SCF_CONV=10,CC_CONV=10,LINEQ_CONV=10,ZETA_CONV=10)                                      
                                                                               
%excite*                                                                       
1                                                                              
1                                                                              
1 7 0 8 0 1.0                         

}}
</tab>

<tab name="Serial job">
{{File
  |name=run_cfour_serial.sh
  |lang="bash"
  |contents=
#!/bin/bash
#SBATCH --account=def-someacct   # replace this with your own account
#SBATCH --ntasks=1
#SBATCH --mem-per-cpu=2500M      # memory; default unit is megabytes.
#SBATCH --time=0-00:30           # time (DD-HH:MM).

# Load the module:

module load intel/2023.2.1 cfour/2.1

echo "Starting run at: `date`"

CFOUROUTPUT="cfour-output.txt"
export CFOUR_NUM_CORES=1

xcfour > ${CFOUROUTPUT} 

# Clean the symlink:
if [[ -L "GENBAS" ]]; then unlink GENBAS; fi

echo "Program finished with exit code $? at: `date`"
}}
</tab>

<tab name="MPI job">
{{File
  |name=run-cfour-mpi.sh
  |lang="bash"
  |contents=
#!/bin/bash
#SBATCH --account=def-someacct   # replace this with your own account
#SBATCH --ntasks-per-node=4
#SBATCH --mem-per-cpu=2500M      # memory; default unit is megabytes.
#SBATCH --time=0-00:30           # time (DD-HH:MM).

# Load the module:

module load intel/2023.2.1  openmpi/4.1.5 cfour-mpi/2.1

echo "Starting run at: `date`"

CFOUROUTPUT="cfour-output.txt"
export CFOUR_NUM_CORES=${SLURM_NTASKS}

xcfour > ${CFOUROUTPUT} 

# Clean the symlink:
if [[ -L "GENBAS" ]]; then unlink GENBAS; fi

echo "Program finished with exit code $? at: `date`"
}}
</tab>
</tabs>


= Related links =

* [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Manual Manual]
* [http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Features Features]